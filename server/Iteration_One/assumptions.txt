##================ Assumptions Document ================##

The following document of Assumptions will be categorised into the
different stages of the project: that is, Iterations 1-3. 

##==== Iteration One ====##

This iteration will be grouped into the assumptions made in each category
of functions, namely:
	- auth_*
	- channel(s)_*
	- message_*
    - user_*
    - standup_*
    - search
    - admin_userpermission_change  


auth_*:
	
    - Assume an accepted password used in the logging in and registration has the following requirements 
    	(A function called is_valid_password() will check against these requirements and return either
      True or False) :-
    
    			- Passoword length between 5 and 20 characters inclusive
    			- At least 1 upper character
    			- At least 1 lower case character
    			- At least 1 number
    			- At least 1 special character
      
    - Assume we have a function token_is_valid() which returns either True if token is active
			and False inactive
		- Similalry we have a funtion, u_id_is_valid() which returns either True or False
    - For the use of auth_passwordreset_reset and its testing, assume that get_reset_code() provides 
    	a valid reset code
    - Assume that -1 is an invalid reset_code 

message_*:
    - Assuming trying to send an empty string will send no message
    - Assuming trying to send a string of spaces will send no message
    - Assuming sending a string containing special characters (\0, \n, \b) will send the characters as is
    - This would be consistent with Slack
    - Assuming message_send_later and message_edit have the same 1000 character limit as message_send
    - Assuming testing computer is fast enough to perform sequential commands in less than a second
    - Assuming the empty string is an invalid token
    - Assuming no valid id's will be -1
    - Assuming helper functions return valid tokens
    - Assuming channels_create, channel_invite, channel_join, channel_leave and channel_message is working
    - Assuming sending the empty string will throw a value error
    - Assuming AccessError has been defined
    - Assuming the stored time sent for message_send_later will be the time it was posted to the channel
    - There is currently no specified way to store the reacts and pins, so testing these is going to be difficult
    - Assuming a valid react id is 1 and 2
    - Assuming only one person can use each react_id on each message (probably a mistake with the specs)
    - Assuming messages sent later can only be removed, edited, reacted and pinned once they've actually been posted
    - Assuming all message functions will throw an access error without a valid token
    - Assuming anyone can unreact any existing react on a message (regardless of if they made it)
